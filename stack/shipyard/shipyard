#!/bin/bash

project_name=toybox
name=$(basename $0)
version=0.1.0

function _version() { 
    echo $version 
}

function _help() { 
    usage 
}

function usage() {
  cat <<-EOF
Usage: ${name} <command>

command:
    start       Start ${name} containers
    stop        Stop ${name} containers
    state       Show ${name} containers status
    crear       Stop and Remove all of ${name} containers
    source      get source code of containers

    version     Show the version of ${name}
    help        Show this message
EOF
}

self_path=$(cd $(dirname $0);pwd)
out=${self_path}/bin/docker-compose.yml
#src=${self_path}/../../src/${name}
src=${self_path}/src
url=${name}.nuts.jp

function _source() {
    if [ ! -e $src ]; then
        git clone https://github.com/shipyard/shipyard.git $src
    fi
}

function _init() {
    
    mkdir -p ${self_path}/bin
    if [ -e $out ]; then
        rm $out
    fi

    _source

    cat <<-EOF > $out
rethinkdb:
    image: rethinkdb
    ports:
        - "8080"
        - "28015"
        - "29015"
proxy:
    image: ehazlett/docker-proxy:latest
    command: -i
    volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
        - "2375"

swarm:
    image: swarm:latest
    command: m --host tcp://0.0.0.0:2375 proxy:2375
    links:
        - "proxy:proxy"
    ports:
        - "2375"

media:
    build: ${src}
    entrypoint: /bin/bash
    dockerfile: Dockerfile.build
    command: -c "make media && sleep infinity"
    working_dir: /go/src/github.com/shipyard/shipyard
    volumes:
        - "/go/src/github.com/shipyard/shipyard/controller/static"

controller:
    build: ${src}
    dockerfile: Dockerfile.build
    entrypoint: /bin/bash
    command: -c "make build && cd controller && ./controller -D server --rethinkdb-addr rethinkdb:28015 -d tcp://swarm:2375"
    links:
        - rethinkdb
        - swarm
    volumes_from:
        - media
    environment:
        - VIRTUAL_HOST=${url}
    ports:
        - "8080"
EOF
}

function _start() {
    _init
    cd ${self_path}/bin
    docker-compose -p ${project_name} up -d
    echo '---------------------------------'
    echo 'URL: http://'${url}
    echo '---------------------------------'
    echo "username: admin"
    echo "password: shipyard"
}

function _stop() {
    cd ${self_path}/bin
    docker-compose -p ${project_name} stop
}

function _rm() {
    cd ${self_path}/bin
    docker-compose -p ${project_name} rm
}

function _state() {
    cd ${self_path}/bin
    docker-compose -p ${project_name} ps
}

function _clear() {
    _stop
    cd ${self_path}/bin
    docker-compose -p ${project_name} rm
}

# check arguments
if [ $# -ne 1 ]; then
  usage
  exit 1
fi

function _is_executable() {
    local command="$1"
    type "$command" > /dev/null 2>&1
}

sub=$1

if _is_executable "_${sub}" ; then
    _${sub}
else
    echo "$name: no such command \"${sub}\""
    usage
    exit 1
fi

exit 0

