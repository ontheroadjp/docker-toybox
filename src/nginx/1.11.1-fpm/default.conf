# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

# ------------------------------------
# base settings
# ------------------------------------
#default_type  text/plain;
server_names_hash_bucket_size   64;
client_body_buffer_size         64k;
tcp_nopush                      on;
server_tokens                   off;

# ------------------------------------
# gzip compression
# ------------------------------------
gzip_static on;
gzip on;
gzip_http_version 1.0;
gzip_vary on;
gzip_comp_level   1;
gzip_types text/plain 
            text/xml 
            text/css 
            text/javascript
            application/xml 
            application/xml+rss 
            application/xhtml+xml 
            application/rss+xml 
            application/atom_xml 
            application/javascript 
            application/x-javascript 
            application/x-httpd-php 
            application/json;
gzip_disable      "MSIE [1-6]\.";
gzip_disable      "Mozilla/4";
gzip_buffers      4 32k;
gzip_min_length   1100;
gzip_proxied off;

# ------------------------------------
# Log
# ------------------------------------
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
#access_log off;

# ------------------------------------
# Host settings
# ------------------------------------
server {
    server_name  localhost;
	listen 80;

	access_log /var/log/nginx/access.log vhost;
    error_log /var/log/nginx/error.log info;

    client_max_body_size        20M;
    #charset koi8-r;

    # dotfiles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # robots
    location = /robots.txt  {
        rewrite ^/robots\.txt$ /index.php?robots=1 last;
        allow all;
        access_log off;
        log_not_found off;
    }

    # favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location / {
        #root   /usr/share/nginx/html;
        root   /var/www/html;
        index  index.php index.html index.htm;
        try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    #error_page  404              /404.html;
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}

    location ~ \.php$ {
        root           /var/www/html;
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root/$fastcgi_script_name;
        include        fastcgi_params;
        fastcgi_pass_header "X-Accel-Redirect";
        fastcgi_pass_header "X-Accel-Buffering";
        fastcgi_pass_header "X-Accel-Charset";
        fastcgi_pass_header "X-Accel-Expires";
        fastcgi_pass_header "X-Accel-Limit-Rate";
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

