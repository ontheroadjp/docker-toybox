#!/bin/sh
set -e

. $TOYBOX_HOME/core/test_images.fnc
. $TOYBOX_HOME/core/test_containers.fnc
. $TOYBOX_HOME/core/test_process.fnc
. $TOYBOX_HOME/core/test_volumes.fnc

sub_domain="test"
domain="test.com"
application=""
cmd=""
fqdn=${sub_domain}.${domain}
url="http://${fqdn}"
app_path=${TOYBOX_HOME}/stack/${domain}/${sub_domain}

tests=0
success=0
failed=0

function __is_executable() {
    local command="$1"
    type "${command}" > /dev/null 2>&1
}

function _new() {
    toybox -s ${sub_domain} -d ${domain} ${application} new
}

function _cleanup() {
    echo ">>> CLEAN UP"
    toybox ${url} down
    rm -rf ${TOYBOX_HOME}/stack/${domain}
}

#cons=()
#ips=()

function _test() {
    test_cases=(
        __test_images
        __test_containers
        __test_process
        __test_links
        __test_volumes
    )

    for i in ${test_cases[@]}; do
        if __is_executable ${i}; then
            ${i}
        fi && echo
    done

    echo "tests: ${tests}"
    echo "success: ${success}"
    echo "failed: ${failed}"
}

function main() {
    if [ $# -ne 2 ]; then
        echo "it must be two arguments."
        exit 1
    fi
    
    application=$1
    if [ ! -f $TOYBOX_HOME/lib/${application}.fnc ]; then
        echo "bad argument(s)."
        exit 1
    fi
    
    cmd=$2
    if ! __is_executable _${cmd}; then
        echo "bad argument."
        exit 1
    fi
    
    if [ -f $TOYBOX_HOME/lib/${application}_test.fnc ]; then
        . $TOYBOX_HOME/lib/${application}_test.fnc
    fi
    . $TOYBOX_HOME/lib/${application}.fnc
    
    _${cmd}
}

main $@

exit 0
