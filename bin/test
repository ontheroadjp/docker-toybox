#!/bin/sh
set -e

. $TOYBOX_HOME/core/test_images.fnc
. $TOYBOX_HOME/core/test_containers.fnc
. $TOYBOX_HOME/core/test_process.fnc
. $TOYBOX_HOME/core/test_volumes.fnc

sub_domain="test"
domain="test.com"
application=""
fqdn=${sub_domain}.${domain}
url="http://${fqdn}"
app_path=${TOYBOX_HOME}/stack/${domain}/${sub_domain}

tests=0
success=0
failed=0

function __is_executable() {
    local command="$1"
    type "${command}" > /dev/null 2>&1
}

function __new() {
    toybox -s ${sub_domain} -d ${domain} ${application} new
}

function __down() {
    toybox ${url} down
}

function __clear() {
    rm -rf ${TOYBOX_HOME}/stack/${domain}
}

cons=()
ips=()

function __main() {
    test_cases=(
        __test_images
        __test_containers
        __test_process
        __test_links
        __test_volumes
    )

    __new $@ && {
        for i in ${test_cases[@]}; do
            if __is_executable ${i}; then
                ${i}
            fi && echo
        done
    }


    echo ">>> CLEAN UP"
    __down && __clear && echo

    echo "tests: ${tests}"
    echo "success: ${success}"
    echo "failed: ${failed}"
}

application=$1
if [ ! -f $TOYBOX_HOME/lib/${application}.fnc ]; then
    echo "bad argument(s)."
    exit 1
fi

if [ -f $TOYBOX_HOME/lib/${application}_test.fnc ]; then
    . $TOYBOX_HOME/lib/${application}_test.fnc
fi
. $TOYBOX_HOME/lib/${application}.fnc

__main $@

exit 0
